#!/usr/bin/perl
# ターミナルで使える漢字直接入力のための単純なツール
# 起動方法
# a. 既定のコードマッピングを使う (code/*)
#    ./chkn
# b. 言語を指定する
#    CHKN_LANG=jpn ./chkn # 日本語モード（既定）
#    CHKN_LANG=cht ./chkn # 中国語繁体字モード
# c. 任意のマッピングファイルを使う
#    ./chkn TABLE1 TABLE2
#
# リターンを押す度にテキストをコピーしたりどこかに送信するには$COPY_TOOLの環境
# 変数を指定します。リターンを押すと、このCOPY_TOOLが起動されSTDINにテキストが
# 書き込まれます。例：Mac OS Xの場合、これをpbcopyに設定すると便利です。
#
# COPY_TOOL=pbcopy ./chkn

use strict;
use utf8;
use warnings;

use FindBin;
use Term::ReadKey;

binmode STDERR, ':utf8';
binmode STDOUT, ':utf8';

my $lang = $ENV{CHKN_LANG} // 'jpn';

my %rad_to_key = (
    亠 => 'a',
    入 => 'c',
    几 => 'c',
    力 => 'c',
    十 => 'c',
    卜 => 'c',
    卩 => 'd',
    夕 => 'e',
    小 => 'f',
    宀 => 'f',
    工 => 'g',
    幺 => 'g',
    彑 => 'h',
    戈 => 'i',
    戸 => 'i',
    手 => 'i',
    扌 => 'i',
    旡 => 'j',
    月 => 'j',
    玄 => 'n',
    田 => 'o',
    禾 => 'q',
    穴 => 'q',
    立 => 'q',
    肉 => 't',
    臣 => 't',
    足 => 'x',
    隹 => ';',
    龜 => '/',
);

my @yomiken = (
    'b'..'d',
    'f'..'h',
    'j'..'n',
    'p'..'t',
    'v'..'z',
    ';',
    ',',
    '.',
    '/',
);

my @yomi_ranges = qw{ア エキ カイ カン キ キヨ ケ コ コク シ シヤ シヨ シン セキ ソウ タイ チヨ テン トク ハン フ ホ マ ラ ル};

@yomiken == @yomi_ranges or die;

# 2~3打鍵コードの文字列 => 実際に入力される文字・文字列
my %codes;

# 間違いやすい字の実際ではないけど調べ得るコードプレフィックス
# 例えば、合の部首は口《ｄ》けれど、人《ｂ》と思い込む可能性がある
# なので、上記の%codesマップにdkg->合と云うエントリーがあるのに対して
# %suggestionsに"bg"と云うキーがあって、配列リファレンスの値に
# "dkg -> 合 (部首＝口)"のような文字列が含まれている。
#
# 入力コードプレフィックス => 入力したいと思われる漢字などの配列
my %suggestions;

my @codes_files = @ARGV;
my @entered_text;
my @uncommitted;

my @kanji_keys = ('a'..'z', q{;}, q{,}, q{.}, q{/});

sub shift_key {
    my ($key) = @_;
    $key =~ tr{1-90[a-z];,./}{!@#$%^&*()[A-Z]:<>?};
    return $key;
}

sub term_copy {
    my $copy_tool = $ENV{COPY_TOOL};
    if (!$copy_tool) {
        return;
    }

    open my $tool_proc, '|-', $copy_tool
        or die "Cannot run '$copy_tool': $!";
    binmode $tool_proc, ':utf8';
    print $tool_proc @_;
}

sub clear_screen {
    print "\033[2J";
}

sub erase_to_eol {
    print "\033[K";
}

my $jouyou_kanji = '';
if ($lang eq 'jpn') {
    $jouyou_kanji = '一丁七万丈三上下不与且世丘丙両並中串丸丹主丼久乏乗乙九乞乱乳乾亀了予争事二互五井亜亡交享京亭人仁今介仏仕他付仙代令以仮仰仲件任企伎伏伐休会伝伯伴伸伺似但位低住佐体何余作佳併使例侍供依価侮侯侵侶便係促俊俗保信修俳俵俸俺倉個倍倒候借倣値倫倹偉偏停健側偵偶偽傍傑傘備催傲債傷傾僅働像僕僚僧儀億儒償優元兄充兆先光克免児党入全八公六共兵具典兼内円冊再冒冗写冠冥冬冶冷凄准凍凝凡処凶凸凹出刀刃分切刈刊刑列初判別利到制刷券刹刺刻則削前剖剛剝剣剤副剰割創劇力功加劣助努励労効劾勃勅勇勉動勘務勝募勢勤勧勲勾匂包化北匠匹区医匿十千升午半卑卒卓協南単博占印危即却卵卸厄厘厚原厳去参又及友双反収叔取受叙口古句叫召可台史右号司各合吉同名后吏吐向君吟否含吸吹呂呈呉告周呪味呼命和咲咽哀品員哲哺唄唆唇唐唯唱唾商問啓善喉喚喜喝喩喪喫営嗅嗣嘆嘱嘲器噴嚇囚四回因団困囲図固国圏園土圧在地坂均坊坑坪垂型垣埋城域執培基埼堀堂堅堆堕堤堪報場塀塁塊塑塔塗塚塞塡塩塾境墓増墜墨墳墾壁壇壊壌士壮声壱売変夏夕外多夜夢大天太夫央失奇奈奉奏契奔奥奨奪奮女奴好如妃妄妊妖妙妥妨妬妹妻姉始姓委姫姻姿威娘娠娯婆婚婦婿媒媛嫁嫉嫌嫡嬢子孔字存孝季孤学孫宅宇守安完宗官宙定宛宜宝実客宣室宮宰害宴宵家容宿寂寄密富寒寛寝察寡寧審寮寸寺対寿封専射将尉尊尋導小少尚就尺尻尼尽尾尿局居屈届屋展属層履屯山岐岡岩岬岳岸峠峡峰島崇崎崖崩嵐川州巡巣工左巧巨差己巻巾市布帆希帝帥師席帯帰帳常帽幅幕幣干平年幸幹幻幼幽幾庁広床序底店府度座庫庭庶康庸廃廉廊延廷建弁弄弊式弐弓弔引弟弥弦弧弱張強弾当彙形彩彫彰影役彼往征径待律後徐徒従得御復循微徳徴徹心必忌忍志忘忙応忠快念怒怖思怠急性怨怪恋恐恒恣恥恨恩恭息恵悔悟悠患悦悩悪悲悼情惑惜惧惨惰想愁愉意愚愛感慄慈態慌慎慕慢慣慨慮慰慶憂憎憤憧憩憬憲憶憾懇懐懲懸成我戒戚戦戯戴戸戻房所扇扉手才打払扱扶批承技抄把抑投抗折抜択披抱抵抹押抽担拉拍拐拒拓拘拙招拝拠拡括拭拳拶拷拾持指挑挙挟挨挫振挿捉捕捗捜捨据捻掃授掌排掘掛採探接控推措掲描提揚換握揮援揺損搬搭携搾摂摘摩摯撃撤撮撲擁操擦擬支改攻放政故敏救敗教敢散敬数整敵敷文斉斎斑斗料斜斤斥斬断新方施旅旋族旗既日旦旧旨早旬旺昆昇明易昔星映春昧昨昭是昼時晩普景晴晶暁暇暑暖暗暦暫暮暴曇曖曜曲更書曹曽替最月有服朕朗望朝期木未末本札朱朴机朽杉材村束条来杯東松板析枕林枚果枝枠枢枯架柄某染柔柱柳柵査柿栃栄栓校株核根格栽桁桃案桑桜桟梅梗梨械棄棋棒棚棟森棺椅植椎検業極楷楼楽概構様槽標模権横樹橋機欄欠次欧欲欺款歌歓止正武歩歯歳歴死殉殊残殖殴段殺殻殿毀母毎毒比毛氏民気水氷永氾汁求汎汗汚江池汰決汽沃沈沖沙没沢河沸油治沼沿況泉泊泌法泡波泣泥注泰泳洋洗洞津洪活派流浄浅浜浦浪浮浴海浸消涙涯液涼淑淡淫深混添清渇済渉渋渓減渡渦温測港湖湧湯湾湿満源準溝溶溺滅滋滑滝滞滴漁漂漆漏演漠漢漫漬漸潔潜潟潤潮潰澄激濁濃濫濯瀬火灯灰災炉炊炎炭点為烈無焦然焼煎煙照煩煮熊熟熱燃燥爆爪爵父爽片版牙牛牧物牲特犠犬犯状狂狙狩独狭猛猟猫献猶猿獄獣獲玄率玉王玩珍珠班現球理琴瑠璃璧環璽瓦瓶甘甚生産用田由甲申男町画界畏畑畔留畜畝略番異畳畿疎疑疫疲疾病症痕痘痛痢痩痴瘍療癒癖発登白百的皆皇皮皿盆益盗盛盟監盤目盲直相盾省眉看県真眠眺眼着睡督睦瞬瞭瞳矛矢知短矯石砂研砕砲破硝硫硬碁碑確磁磨礁礎示礼社祈祉祖祝神祥票祭禁禅禍福秀私秋科秒秘租秩称移程税稚種稲稼稽稿穀穂積穏穫穴究空突窃窒窓窟窮窯立竜章童端競竹笑笛符第筆等筋筒答策箇箋算管箱箸節範築篤簡簿籍籠米粉粋粒粗粘粛粧精糖糧糸系糾紀約紅紋納純紙級紛素紡索紫累細紳紹紺終組経結絞絡給統絵絶絹継続維綱網綻綿緊総緑緒線締編緩緯練緻縁縄縛縦縫縮績繁繊織繕繭繰缶罪置罰署罵罷羅羊美羞群羨義羽翁翌習翻翼老考者耐耕耗耳聖聞聴職肉肌肖肘肝股肢肥肩肪肯育肺胃胆背胎胞胴胸能脂脅脇脈脊脚脱脳腎腐腕腫腰腸腹腺膚膜膝膨膳臆臓臣臨自臭至致臼興舌舎舗舞舟航般舶舷船艇艦良色艶芋芝芯花芳芸芽苗苛若苦英茂茎茨茶草荒荘荷菊菌菓菜華萎落葉著葛葬蒸蓄蓋蔑蔵蔽薄薦薪薫薬藍藤藩藻虎虐虚虜虞虫虹蚊蚕蛇蛍蛮蜂蜜融血衆行術街衛衝衡衣表衰衷袋袖被裁裂装裏裕補裸製裾複褐褒襟襲西要覆覇見規視覚覧親観角解触言訂訃計討訓託記訟訪設許訳訴診証詐詔評詞詠詣試詩詮詰話該詳誇誉誌認誓誕誘語誠誤説読誰課調談請論諦諧諭諮諸諾謀謁謄謎謙講謝謡謹識譜警議譲護谷豆豊豚象豪貌貝貞負財貢貧貨販貪貫責貯貴買貸費貼貿賀賂賃賄資賊賓賛賜賞賠賢賦質賭購贈赤赦走赴起超越趣足距跡路跳践踊踏踪蹴躍身車軌軍軒軟転軸軽較載輝輩輪輸轄辛辞辣辱農辺込迅迎近返迫迭述迷追退送逃逆透逐逓途通逝速造連逮週進逸遂遅遇遊運遍過道達違遜遠遡遣適遭遮遵遷選遺避還那邦邪邸郊郎郡部郭郵郷都酌配酎酒酔酢酪酬酵酷酸醒醜醸采釈里重野量金釜針釣鈍鈴鉄鉛鉢鉱銀銃銅銘銭鋭鋳鋼錠錦錬錮錯録鍋鍛鍵鎌鎖鎮鏡鐘鑑長門閉開閑間関閣閥閲闇闘阜阪防阻附降限陛院陣除陥陪陰陳陵陶陸険陽隅隆隊階随隔隙際障隠隣隷隻雄雅集雇雌雑離難雨雪雰雲零雷電需震霊霜霧露青静非面革靴韓音韻響頂頃項順須預頑頒頓領頭頰頻頼題額顎顔顕願類顧風飛食飢飯飲飼飽飾餅養餌餓館首香馬駄駅駆駐駒騎騒験騰驚骨骸髄高髪鬱鬼魂魅魔魚鮮鯨鳥鳴鶏鶴鹿麓麗麦麺麻黄黒黙鼓鼻齢𠮟';
} elsif ($lang eq 'cht') {
    # 台灣の常用國字標準字體表
    $jouyou_kanji = '一丁七丈三上下不丐丑且丕世丘丙丞丟並丫中串丸丹主乃久么之乍乎乏乒乓乖乘乙九乞也乩乳乾亂了予事二于云互五井亙些亞亟亡交亥亦亨享京亭亮人什仁仃仄仆仇今介仍仔仕他仗付仙仞仟代令以仰仲仳件任份仿企伉伊伍伏伐休伕伙伯估伴伶伸伺似伽佃但佇位低住佐佑佔何佗余佛作佝佞你佣佩佬佯佰佳併佻佾使侃來侈例侍侏侖供依侮侯侵侶便係促俄俊俎俏俐俑俗俘俚保俞俟俠信修俯俱俳俸俺俾倀倆倉個倌倍倏們倒倔倖倘候倚借倡倣倥倦倨倩倪倫倭值偃假偉偌偎偏偕做停健側偵偶偷偺偽傀傅傍傑傖傘備傢催傭傯傲傳債傷傻傾僅像僑僕僖僚僥僧僭僮僱僵價僻儀儂億儈儉儐儒儔儘償儡優儲儷儼兀允元兄充兆兇先光克兌免兒兔兕兗兜兢入內全兩八公六兮共兵其具典兼冀冉冊再冑冒冕冗冠冢冤冥冬冰冶冷冽准凋凌凍凜凝几凡凰凱凳凶凸凹出函刀刁刃分切刈刊刎刑划列初判別刨利刪刮到制刷券刺刻剁剃則削剋剌前剎剔剖剛剜剝剩剪副割剴創剷剽剿劃劇劈劉劍劑力功加劣助努劫劬劾勁勃勇勉勒動勗勘務勛勝勞募勢勤勦勵勸勻勾勿包匆匈匍匏匐匕化北匙匝匠匡匣匪匯匱匹匾匿區十千卅升午卉半卑卒卓協南博卜卞占卡卦卮卯印危即卵卷卸卹卻卿厄厚厝原厥厭厲去參又叉及友反叔取受叛叟叢口古句另叨叩只叫召叭叮可台叱史右叵司叼吁吃各吆合吉吊吋同名后吏吐向吒君吝吞吟吠否吧吩含吭吮吱吳吵吶吸吹吻吼吾呀呂呃呆呈告呎呢周呱味呵呶呷呸呻呼命咀咄咆咋和咎咐咒咕咖咚咦咨咪咫咬咯咱咳咸咻咽哀品哂哄哇哈哉哎員哥哦哨哩哪哭哮哲哺哼唁唆唉唐唔唧唬售唯唱唳唷唸唾啃啄商啊問啕啖啜啞啟啡啣啤啦啪啻啼啾喀喂喃善喇喉喊喋喔喘喚喜喝喟喧喪喬單喱喲喳喻嗅嗆嗇嗎嗑嗓嗚嗜嗟嗡嗣嗤嗥嗦嗨嗯嗷嗽嗾嘀嘆嘈嘉嘍嘎嘔嘖嘗嘛嘟嘩嘮嘯嘰嘲嘴嘶嘹嘻嘿噎噓噗噙噢噤噥器噩噪噫噬噯噱噴噸噹嚀嚅嚇嚎嚏嚐嚕嚥嚨嚮嚴嚶嚷嚼囀囁囂囈囉囊囌囑囚四回因囤囪困固圃圈國圍園圓圖團土在圬圭圯地圳圾址均坊坍坎坏坐坑坡坤坦坩坪坷坼垂垃型垠垢垣垮埂埃埋城埔域埠埤執培基堂堅堆堊堡堤堪堯堰報場堵塊塌塑塔塗塘塚塞塢填塭塵塹塾墀境墅墊墓墜增墟墨墮墳墾壁壅壇壑壓壕壘壙壞壟壢壤壩士壬壯壹壺壽夏夔夕外夙多夜夠夢夤夥大天太夫夭央失夷夸夾奄奇奈奉奎奏奐契奔奕套奘奚奠奢奧奩奪奮女奴奶奸她好妁如妃妄妊妍妒妓妖妙妝妞妣妤妥妨妮妯妳妹妻妾姆姊始姍姐姑姒姓委姘姚姜姣姥姦姨姪姬姻姿威娃娌娑娓娘娛娜娟娠娣娥娩娶娼婀婁婆婉婊婚婢婦婪婷婿媒媚媛媲媳媼媽媾嫁嫂嫉嫌嫖嫗嫘嫡嫣嫦嫩嫵嫻嬉嬋嬌嬝嬤嬪嬰嬴嬸孀子孑孓孔孕字存孚孜孝孟季孤孩孫孰孱孳孵學孺孽孿它宅宇守安宋完宏宗官宙定宛宜客宣室宥宦宮宰害宴宵家宸容宿寂寄寅密寇富寐寒寓寞察寡寢寤寥實寧寨審寫寬寮寵寶寸寺封射將專尉尊尋對導小少尖尚尤尬就尷尸尹尺尼尾尿局屁居屆屈屋屍屎屏屐屑展屜屠屢層履屬屯山屹岌岐岑岔岡岩岫岱岳岷岸峙峨峪峭峰島峻峽崁崆崇崎崑崔崖崙崛崢崩嵌嵐嵩嶄嶇嶝嶺嶼嶽巍巒巔巖川州巡巢工左巧巨巫差己已巳巴巷巽巾市布帆希帑帕帖帘帚帛帝帥師席帳帶帷常帽幀幅幌幔幕幗幛幟幢幣幫干平年并幸幹幻幼幽幾庇床序底庖店庚府庠度座庫庭庵庶康庸庾廁廂廈廉廊廓廖廚廝廟廠廢廣廬廳延廷建廿弁弄弈弊式弒弓弔引弗弘弛弟弦弧弩弭弱張強弼彆彈彌彎彗彙彝形彤彥彩彪彫彬彭彰影彷役彼彿往征待徇很徊律後徐徑徒得徘徙從御徨復循徬微徵德徹徽心必忌忍忖志忘忙忝忠快忱念忽忿怎怏怒怔怕怖思怠怡急性怨怪怯怵恃恆恍恐恕恙恢恣恤恥恨恩恪恫恬恭息恰恿悄悅悉悌悍悔悖悚悟悠患您悲悴悵悶悸悻悼悽情惆惋惑惕惘惚惜惟惠惡惦惰惱想惴惶惹惺惻愀愁愈愉愎意愕愚愛愜感愣愧愴愾愿慄慇慈態慌慍慎慕慘慚慝慟慢慣慧慨慫慮慰慶慷慼慾憂憊憎憐憑憔憚憤憧憩憫憬憲憶憾懂懇懈應懊懍懣懦懲懵懶懷懸懺懼懾懿戀戈戊戌戍戎成我戒戕或戚戛戟戡戢截戮戰戲戳戴戶戾房所扁扇扈扉手才扎扒打扔托扛扣扭扮扯扳扶批扼找承技抄抉把抑抒抓投抖抗折抨披抬抱抵抹押抽抿拂拄拆拇拈拉拋拌拍拎拐拒拓拔拖拗拘拙拚招拜括拭拮拯拱拳拴拷拼拽拾拿持指挈按挑挖挨挪挫振挺挽挾捂捆捉捎捏捐捕捧捨捩捫捱捲捶捷捻掀掃掄授掉掌掏排掖掘掙掛掠採探掣接控推掩措掬揀揆揉揍描提插揖揚換握揣揩揪揭揮援損搏搓搔搖搗搜搞搪搬搭搶搽搾摑摒摔摘摟摧摩摯摸摹摺撇撈撐撒撓撕撚撞撤撥撩撫撬播撮撰撲撻撼撿擁擂擄擅擇擊擋操擎擒擔擘據擠擦擬擰擱擲擴擺擻擾攀攆攏攔攘攙攜攝攣攤攪攫攬支收改攻放政故效敏救敖敗敘教敝敞敢散敦敬敲整敵敷數斂斃文斐斑斗料斜斟斡斤斥斧斫斬斯新斷方於施旁旅旋旌旎族旖旗既日旦旨早旬旭旱旺昀昂昆昌明昏易昔星映春昧昨昭是時晃晉晌晏晒晚晝晤晦晨普景晰晴晶智暇暈暉暑暖暗暢暨暫暮暴暹曆曉曖曙曝曠曦曰曲曳更曷書曹曼曾替最會月有朋服朔朕朗望朝期朦朧木未末本札朮朱朴朵朽杉李杏材村杖杜杞束杭杯杰東杳杵杷松板枇枉枋析枕林枚果枝枯枴架枸柄柏某柑染柔柚柞查柩柬柯柱柳柴柵柿栓栗校栩株核根格栽桀桂桃桅框案桌桐桑桓桔桶桿梁梃梅梆梓梔梗條梟梢梧梨梭梯械梱梳梵棄棉棋棍棒棕棗棘棚棟棠棣棧森棲棵棹棺椅植椎椒椰楊楓楔楚楞楠楨楫業極楷楹概榆榔榕榛榜榨榫榭榮榴榷榻槁構槌槍槐槓槨槳槽樁樂樅樊樓標樞樟模樣樵樸樹樺樽橄橇橋橘橙機橡橢橫檀檄檔檜檢檬檳檸檻櫂櫃櫓櫚櫛櫝櫥櫻欄權欖欠次欣欲欺欽款歇歉歌歐歙歟歡止正此步武歧歪歲歷歸歹死歿殃殆殉殊殖殘殤殮殯殲段殷殺殼殿毀毅毆毋母每毒毓比毗毛毫毯毽氏氐民氓氖氛氟氣氤氦氧氨氫氮氯氳水永氾汀汁求汐汕汗汙汝汞江池汨汪汰汲決汽汾沁沃沅沈沉沌沐沒沖沙沛沫沮沱河沸油治沼沽沾沿況泄泅泉泊泌泓法泗泛泡波泣泥注泰泱泳洋洌洗洛洞津洪洱洲洶活洽派流浙浚浦浩浪浬浮浴海浸涇消涉涎涓涕涮涯液涵涸涼淄淅淆淇淋淌淑淒淘淙淚淞淡淤淨淪淫淮深淳淵混淹淺添清渙渚減渝渠渡渣渤渥渦測渭港渲渴游渺渾湃湊湍湔湖湘湛湧湮湯溉源準溘溜溝溢溥溪溫溯溶溺溼滂滄滅滇滋滌滑滓滔滬滯滲滴滾滿漁漂漆漏漓演漕漠漢漣漩漪漫漬漯漱漲漳漸漾漿潑潔潘潛潤潦潭潮潰潸潺潼澀澄澆澈澎澗澡澤澧澱澳澹激濁濂濃濘濛濟濠濡濤濫濬濯濱濺濾瀆瀉瀋瀏瀑瀕瀚瀛瀝瀟瀨瀰瀾灌灑灘灣灤火灰灶灸灼災炊炎炒炕炙炫炬炭炮炯炳炸為烈烊烏烘烙烤烹烽焉焊焙焚無焦焰然煉煌煎煙煜煞煤煥煦照煩煬煮煽熄熊熔熙熟熨熬熱熹熾燃燄燈燉燎燐燒燕燙燜營燥燦燧燬燭燮燴燻爆爍爐爛爨爪爬爭爰爵父爸爹爺爻爽爾牆片版牌牒牖牘牙牛牝牟牠牡牢牧物牯牲牴特牽犀犁犄犒犖犛犢犧犬犯狀狂狄狎狐狗狙狠狡狩狷狸狹狼狽猓猖猙猛猜猥猩猴猶猷猾猿獄獅獎獐獗獨獰獲獵獷獸獺獻玀玄率玉王玖玟玨玩玫玲玳玷玻珀珊珍珠班珮現球琅理琉琊琍琢琥琪琳琴琵琶琺琿瑁瑕瑙瑚瑛瑜瑞瑟瑣瑤瑩瑪瑯瑰璃璋璜璣璦璧璩環璽瓊瓏瓜瓠瓢瓣瓦瓶瓷甄甌甕甘甚甜生產甥甦用甩甫甬甭田由甲申男甸甽界畏畔留畚畜畝畢略畦番畫異當畸疆疇疊疋疏疑疙疚疝疤疥疫疲疳疵疹疼疽疾病症痊痔痕痘痙痛痞痢痣痰痱痲痴痺痿瘀瘁瘉瘋瘍瘓瘟瘠瘡瘤瘦瘧瘩瘴瘸療癆癌癒癖癘癢癥癩癬癮癱癲癸登發白百皂的皆皇皈皎皓皖皚皮皰皴皺皿盂盃盆盈益盍盎盒盔盛盜盞盟盡監盤盥盧盪目盯盲直相盹盼盾省眉看真眠眨眩眶眷眸眺眼眾睏睛睜睞睡督睥睦睨睪睫睬睹睽睿瞄瞇瞌瞎瞑瞞瞟瞠瞥瞧瞪瞬瞭瞰瞳瞻瞽瞿矇矓矗矚矛矜矢矣知矩短矮矯石矽砂砌砍研砝砥砧砭砰破砷砸硃硝硫硬硯硼碉碌碎碑碗碘碟碧碩碰碳確碼碾磁磅磊磋磐磕磚磨磬磯磴磷磺礁礎礙礦礪礫礬示社祀祁祆祇祈祉祐祕祖祗祚祝神祟祠祥票祭祺祿禁禍禎福禦禧禪禮禱禹禽禾禿秀私秉秋科秒租秣秤秦秧秩移稀稅稈程稍稔稚稜稟稠種稱稷稻稼稽稿穀穆穌積穎穗穡穢穩穫穴究穹空穿突窄窈窒窕窖窗窘窟窠窩窪窮窯窺竄竅竇竊立站竟章竣童竭端競竹竺竽竿笆笑笙笛笞笠符笨第筆等筋筍筏筐筒答策筠筵筷箋箏箔箕算箝管箭箱箴節篁範篆篇築篙篛篡篤篩篷篾簇簍簑簞簡簣簧簪簫簷簸簽簾簿籃籌籍籐籟籠籤籬籮籲米粉粒粗粟粥粱粳粵粹粽精糊糕糖糙糜糞糟糠糢糧糯糸系糾紀紂約紅紇紉紊紋納紐純紕紗紙級紛紜素紡索紫紮累細紳紹紼絀終絃組絆結絕絞絡絢給絨絮統絲絹綁綏綑經綜綞綠綢維綰綱網綴綵綸綺綻綽綾綿緇緊緒緘線緝緞締緣編緩緬緯練緻縈縊縑縛縣縫縮縱縲縷總績繁繃繅繆織繕繚繞繡繩繪繫繭繹繼繽纂續纏纓纖纜缶缸缺缽罄罈罐罔罕罟罩罪置罰署罵罷罹羅羈羊羋羌美羔羚羞群羨義羯羲羶羸羹羽羿翁翅翌翎習翔翕翟翠翡翩翰翱翳翹翻翼耀老考者耆而耍耐耒耕耗耘耙耜耳耶耽耿聆聊聖聘聚聞聯聰聱聲聳聶職聽聾聿肄肅肆肇肉肋肌肓肖肘肚肛肝股肢肥肩肪肫肯肱育肴肺胃胄背胎胖胚胛胞胡胤胥胭胰胱胳胴胸能脂脅脆脈脊脖脣脩脫脯脹脾腆腋腎腐腑腔腕腥腦腫腮腰腱腳腸腹腺腿膀膈膊膏膚膛膜膝膠膨膩膳膺膽膾膿臀臂臃臆臉臍臏臘臚臟臣臥臧臨自臬臭至致臺臻臼臾舀舂舅與興舉舊舌舍舐舒舔舛舜舞舟舢舨航舫般舵舶舷船艇艘艙艦艮良艱色艾芋芍芒芙芝芟芥芬芭花芳芹芻芽苑苒苓苔苗苛苜苞苟苣若苦苧英茁茂范茄茅茉茗茫茱茲茴茵茶茸茹荀草荊荏荐荒荔荷荸荻荼莉莊莎莒莓莖莘莞莠莢莫莽菁菅菊菌菜菠菩華菰菱菲菴菸菽萃萄萊萋萌萍萎萬萱萵萸萼落葉著葛葡董葦葩葫葬葵葷蒂蒐蒙蒜蒞蒲蒸蒼蒿蓀蓄蓆蓉蓋蓓蓬蓮蓿蔑蔓蔔蔗蔚蔡蔣蔥蔬蔭蔽蕃蕈蕉蕊蕙蕨蕩蕪蕭蕾薄薇薑薔薛薜薩薪薯薰藉藍藏藐藕藝藤藥藩藪藹藺藻蘆蘇蘊蘋蘑蘗蘚蘭蘸蘿虎虐虔處虛虜虞號虧虫虱虹蚊蚌蚓蚣蚤蚩蚪蚯蚱蚵蚶蛀蛄蛆蛇蛋蛔蛙蛛蛟蛤蛭蛹蛻蛾蜀蜂蜃蜇蜈蜓蜘蜜蜢蜥蜴蜻蜿蝌蝕蝗蝙蝠蝦蝨蝴蝶蝸螂螃融螞螟螢螫螳螺螻蟀蟆蟈蟋蟑蟒蟬蟯蟲蟹蟻蠅蠍蠔蠕蠟蠡蠢蠣蠱蠶蠹蠻血行衍術街衙衛衝衡衢衣表衫衰衷袁袂袈袋袍袒袖袞被袱裁裂裊裔裕裘裙補裝裟裡裨裳裴裸裹製褂複褐褒褓褚褥褪褫褲褶褸褻襄襖襟襠襤襪襯襲西要覃覆見規覓視覦親覬覲覺覽觀角解觴觸言訂訃計訊訌討訐訓訕訖託記訛訝訟訣訥訪設許訴診註証詁詆詐詔評詛詞詠詢詣試詩詫詬詭詮詰話該詳詹詼誅誇誌認誑誓誕誘語誠誡誣誤誥誦誨說誰課誼調諂諄談諉請諍諒論諜諦諧諫諭諮諱諷諸諺諾謀謁謂謄謊謎謗謙講謝謠謨謬謹譁證譎譏識譚譜警譬譯議譴護譽讀變讒讓讖讚谷谿豁豆豈豉豌豎豐豔豕豚象豢豪豫豬豹豺貂貉貊貌貍貓貝貞負財貢貧貨販貪貫責貯貲貳貴貶買貸費貼貽貿賀賁賂賃賄賅資賈賊賑賒賓賜賞賠賢賣賤賦質賬賭賴賺購賽贅贈贊贍贏贓贖贗贛赤赦赧赫赭走赳赴起趁超越趕趙趟趣趨足趴趾跆跋跌跎跑跚跛距跟跡跨跪路跳跺跼踏踐踝踟踢踩踫踱踴踵踹蹂蹄蹈蹉蹊蹋蹙蹣蹤蹦蹬蹲蹶蹺蹼躁躂躅躇躉躊躍躑躡躪身躬躲躺軀車軋軌軍軒軔軛軟軸軻軼軾較載輊輒輓輔輕輛輜輝輟輦輩輪輯輸輻輾輿轂轄轅轉轍轎轔轟轡辛辜辟辣辦辨辭辮辯辰辱農迂迄迅迆迎近返迢迥迦迪迫迭述迴迷迺追退送逃逅逆逍透逐途逕逖逗這通逛逝逞速造逢連逮週進逵逸逼逾遁遂遇遊運遍過遏遐遑道達違遘遙遜遞遠遣遨適遭遮遲遴遵遷選遺遼遽避邀邁邂還邇邊邏邐邑邕邢那邦邪邱邵邸郁郊郎郡部郭郵都鄂鄉鄒鄙鄧鄭鄰鄱鄹酉酊酋酌配酒酗酣酥酩酪酬酵酷酸醃醇醉醋醒醜醞醣醫醬醺釀釁采釉釋里重野量釐金釗釘釜針釣釦釧釵鈉鈍鈐鈔鈕鈞鈣鈴鈷鈸鈽鈾鉀鉋鉑鉗鉛鉤鉸鉻銀銅銓銖銘銜銬銳銷銻銼鋁鋅鋒鋤鋪鋸鋼錄錐錘錚錠錢錦錨錫錯錳錶鍊鍋鍍鍛鍥鍬鍰鍵鍾鎂鎊鎔鎖鎢鎮鎳鏃鏈鏍鏑鏖鏗鏘鏜鏝鏟鏡鏢鏤鏽鐃鐘鐮鐲鐳鐵鐸鐺鑄鑑鑒鑠鑣鑰鑲鑼鑽鑾鑿長門閂閃閉開閏閑閒間閔閘閡閣閤閥閨閩閭閱閻闆闈闊闋闌闐闔闖關闡闢阜阡阪阮阱防阻阿陀附陋陌降限陛陝陡院陣除陪陰陲陳陴陵陶陷陸陽隅隆隊隋隍階隔隕隘隙際障隧隨險隱隴隸隻雀雁雄雅集雇雉雋雌雍雕雖雙雛雜雞離難雨雪雯雲零雷雹電需霄霆震霉霍霎霏霑霓霖霜霞霧霪露霸霹霽霾靂靄靈青靖靛靜非靠靡面靦靨革靴靶靼鞅鞋鞍鞏鞘鞠鞣鞦鞭韁韃韆韋韌韓韜韭音韶韻響頁頂頃項順須頊頌預頑頒頓頗領頡頤頭頰頷頸頹頻顆題額顎顏顓願顛類顧顫顯顰顱風颯颱颳颶颺颼飄飛食飢飧飩飪飭飯飲飴飼飽飾餃餅餉養餌餐餒餓餘餛餞餡館餵餽餾餿饅饑饒饜饞首香馥馨馬馭馮馱馳馴駁駐駑駒駕駙駛駝駟駢駭駱駿騁騎騖騙騫騰騷騾驀驃驅驕驗驚驛驟驢驥驪骨骯骰骷骸骼髏髒髓體高髦髭髮髯髻鬃鬆鬍鬚鬢鬥鬧鬨鬱鬲鬼魁魂魄魅魏魔魘魚魯魷鮑鮪鮫鮮鯉鯊鯧鯨鯽鰍鰓鰥鰭鰱鰻鰾鱉鱔鱖鱗鱷鱸鳥鳩鳳鳴鳶鴆鴉鴒鴕鴛鴣鴦鴨鴻鴿鵑鵝鵠鵡鵪鵬鵲鶉鶯鶴鷂鷓鷗鷥鷹鷺鸚鸞鹹鹼鹽鹿麂麋麒麓麗麝麟麥麩麴麵麻麼麾黃黍黎黏黑黔默黛黜黝點黠黨黯黴黷鼇鼎鼓鼕鼙鼠鼬鼴鼻鼾齊齋齒齜齟齡齣齦齪齬齲齷龍龐龔龜';
}

sub is_jouyou {
    my ($c) = @_;
    $c = ord $c;
    my $min = 0;
    my $max = length $jouyou_kanji;

    while ($min < $max) {
        my $try = ($min + $max) >> 1;
        my $tried = ord(substr $jouyou_kanji, $try, 1);
        if ($tried < $c) {
            $min = $try + 1;
        } elsif ($tried > $c) {
            $max = $try;
        } else {
            return $try + 1;
        }
    }

    return 0;
}

# ターミナル上の字の幅を返す
# 半角の場合：1
# 全角の場合：2
# 文字列の長さが2以上の場合、全文字合計の幅を返す
sub char_width {
    my ($s) = @_;
    my $total = 0;

    for my $char (split q{}, $s) {
        my $ord = ord $char;
        if ($ord <= 0xff) {
            $total += 1;
        } elsif ($ord >= 0xff01 && $ord <= 0xff60) {
            # 全角英数字
            $total += 2;
        } elsif ($ord >= 0xff61 && $ord <= 0xffdc) {
            # 半角カタカナ
            $total += 1;
        } elsif ($ord >= 0xf900 && $ord < 0xfb00) {
            # CJK Compatibility Ideographs
            $total += 2;
        } elsif ($ord >= 0x10000) {
            # surrogate pair (多分、漢字)
            $total += 2;
        } elsif ($ord >= 0x3000 && $ord <= 0x30fe) {
            # 平仮名／片仮名
            $total += 2;
        } elsif ($ord >= 0x3200 && $ord < 0xa000) {
            # Enclosed CJK Letters [3200, 3300)
            # CJK 互換             [3300, 3400)
            # "Rare" CJK           [3400, 4e00)
            # 漢字                 [4e00, 0xa000)
            $total += 2;
        } else {
            $total += 1;
        }
    }

    return $total;
}

sub guide_ji {
    my ($key) = @_;
    my $raw_ji = $codes{$key};
    my $padding = q{ } x (2 - char_width $raw_ji);
    if (is_jouyou $raw_ji) {
        # 常用漢字を青く描画する
        return "\e[34m$raw_ji\e[39m$padding";
    } else {
        return "$raw_ji$padding";
    }
}

if (!@codes_files) {
    my $code_dir_path = "$FindBin::Bin/code";
    opendir my $code_dir, $code_dir_path or die;
    while (my $code_file = readdir($code_dir)) {
        push @codes_files, "$code_dir_path/$code_file";
    }
}

sub simplify_yomi {
    my ($a) = @_;
    # 読み鍵を決定する際、ひら・カタを区別しないので、ひらがなをカタカナに変換
    # する
    $a =~ tr/ぁ-ゖ/ァ-ヶ/;
    $a =~ tr/ャュョ/ヤユヨ/;
    # 半濁音と濁音も無視するので、濁点を取り除く
    $a =~ tr{ガギグゲゴザジズゼゾダヂヅデドバビブベボパピプペポ}
            {カキクケコサシスセソタチツテトハヒフヘホハヒフヘホ};
    return $a;
}

sub read_codes {
    %codes = ();
    %suggestions = ();
    for my $codes_file (@codes_files) {
        open my $codes, $codes_file
            or die "Cannot open $codes_file: $!";
        binmode $codes, ':utf8';

        while (my $line = <$codes>) {
            chomp $line;

            my ($key, $value, @notes) = split m/\t/, $line;
            if (!defined $value) {
                print STDERR "Could not process code: $line\n";
                die;
            }

            # 使用の言語でこのコードを有効にするか
            # - Lから始まるノートが無い場合：有効
            # - "L$lang"とノートがある場合：有効
            # - その他：無効
            my $lang_note_count = 0;
            my $found_spec_lang = 0;
            for my $note (@notes) {
                next if $note !~ m/^L[a-z]+$/;
                $lang_note_count++;
                $found_spec_lang = 1 if $note eq "L$lang";
            }
            next if $lang_note_count and !$found_spec_lang;

            die "Duplicate code: $key" if defined $codes{$key};
            $codes{$key} = $value;

            # hbかhyの注がある場合は%suggestionsのマップを拡張する

            # hyに相当する読み鍵を計算する
            my @hy_keys = map {
                # yomikenとyomi_rangesを使って読みから読み鍵の変換を行う
                my $yomi = simplify_yomi $_;
                my $match_id = $#yomi_ranges;
                for my $id (0..($#yomi_ranges-1)) {
                    if (($yomi_ranges[$id + 1] cmp $yomi) > 0) {
                        $match_id = $id;
                        last;
                    }
                }
                $yomiken[$match_id];
            } map {substr $_, 2} grep {$_ =~ /^hy/} @notes;

            # hbに相当する部首鍵を計算する
            my @hb_keys = map {
                if (!$rad_to_key{$_}) {
                    print STDERR "radical not in \%rad_to_key: $_\n";
                    die;
                }
                $rad_to_key{$_};
            } map {substr $_, 2} grep {$_ =~ /^hb/} @notes;

            # 実際の読み・部首は明記されている場合、サジェストに入れる
            my @code_source_notes = map {
                my $x = $_;
                $x =~ s/^y/読み＝/;
                $x =~ s/^b/部首＝/;
                $x;
            } grep {
                $_ =~ /^[yb]/;
            } @notes;

            next if !@hb_keys && !@hy_keys;
            my $code_help = "$key => $value";
            if (@code_source_notes) {
                local $";
                $" = q{、};
                $code_help .= " (@code_source_notes)";
            }

            my $b_key = substr $key, 0, 1;
            my $y_key = substr $key, 1, 1;
            for my $b ($b_key, @hb_keys) {
                for my $y ($y_key, @hy_keys) {
                    next if $b eq $b_key && $y eq $y_key;

                    my $array = $suggestions{"$b$y"} //= [];
                    push @$array, $code_help;
                }
            }
        }
    }
}
read_codes;

ReadMode 4; # Turn off controls keys

my @input_history;

sub print_keyboard_row {
    my ($left_padding, $key_names, $keyboard_ref) = @_;
    my @key_name_array = split q{}, $key_names;

    my $draw_frame = !$keyboard_ref;
    $keyboard_ref //= {};

    if ($draw_frame) {
        print $left_padding;
        my $separator = q{};
        for my $key_name (@key_name_array) {
            if ($key_name eq q{ }) {
                print q{  };
                next;
            }
            printf '%s┌%s ┐', $separator, $key_name;
            $separator = q{ };
        }
        erase_to_eol;
    }
    print "\n";
    print $left_padding;
    for my $key_name (@key_name_array) {
        if ($key_name eq q{ }) {
            print q{  };
            next;
        }
        my $key_value = $keyboard_ref->{$key_name} || q{  };
        my $shift_value = $keyboard_ref->{shift_key $key_name} || q{│ };
        printf '│%s%s', $key_value, $shift_value;
    }
    erase_to_eol;
    print "\n";
    if ($draw_frame) {
        print $left_padding;
        my $separator = q{};
        for my $key_name (@key_name_array) {
            if ($key_name eq q{ }) {
                print q{  };
                next;
            }
            my $index_finger_key = $key_name eq 'f' || $key_name eq 'j';
            printf '%s└%s┘', $separator, ($index_finger_key ? '==' : '──');
            $separator = q{ };
        }
        erase_to_eol;
    }
}

# The argument is a hash from keys (e.g. 'f') to something to draw inside the
# keyboard in the guide. If the key is omitted in the map, the key is kept
# blank. Otherwise, it should be a single wide character.
# If that argument is omitted, then it only draws the keyboard outline.
sub print_keyboard {
    my ($keyboard_ref) = @_;

    my ($width, $height) = GetTerminalSize;
    printf "\033[%d;0H", ($height - 8);

    print_keyboard_row q{}, 'qwert yuiop', $keyboard_ref;
    print "\n";
    print_keyboard_row q{  }, 'asdfg hjkl;', $keyboard_ref;
    print "\n";
    print_keyboard_row q{    }, 'zxcvb nm,./', $keyboard_ref;
}

my $last_term_size = q{};
sub maybe_refresh_screen {
    my $term_size = join q{,}, GetTerminalSize;
    return if $term_size eq $last_term_size;
    $last_term_size = $term_size;

    clear_screen;

    printf "\033[0;0H";
    for my $past_input (@input_history) {
        print "$past_input\n";
    }

    print_keyboard;
}

# 標準入力からキーを一つ読むか、Alt+キーを読む
sub read_key_chord {
    my $first_key = ReadKey 0;
    return $first_key if ord($first_key) != 27;
    return $first_key . ReadKey(0);
}

while (1) {
    local $";
    $" = q{};

    maybe_refresh_screen;

    # Jump to underneath the last input history item
    printf "\033[%d;0H", scalar(@input_history) + 1;

    print "@entered_text";
    if (@uncommitted) {
        print "<@uncommitted>";
    }

    erase_to_eol;

    my $key = read_key_chord;
    if ($key eq "\x1b" . 'h') {
        my $prefix = join q{}, @uncommitted;
        print "\n";
        my $suggestions = $suggestions{$prefix} // [];
        for my $suggestion (@$suggestions) {
            print "$suggestion\n";
        }
        read_key_chord;
        next;
    }
    next if length($key) == 2;
    if (ord($key) < 0x20 && $key ne "\n") {
        next;
    }

    if ($key eq "\n") {
        if (@uncommitted) {
            push @entered_text, @uncommitted;
            @uncommitted = ();
        } elsif (!@entered_text) {
            @input_history = ();
            # 開発中はコードを調整・追加するので、コードを最読込
            read_codes;

            # 乱れている場合があるので、キーボードを最描画する
            clear_screen;
            print_keyboard;
        } else {
            my $completed_text = join q{}, @entered_text;
            push @input_history, $completed_text;
            term_copy $completed_text;
            @entered_text = ();
        }
    } elsif (ord($key) == 127) {
        # Backspace
        if (@uncommitted) {
            pop @uncommitted;
        } elsif (@entered_text) {
            pop @entered_text;
        }
    } else {
        push @uncommitted, $key;
    }

    while (@uncommitted > 3) {
        push @entered_text, shift(@uncommitted);
    }

    my $maybe_code = join q{}, @uncommitted;
    if ($codes{$maybe_code}) {
        push @entered_text, $codes{$maybe_code};

        if (length($maybe_code) == 3) {
            my @chars = split q{}, $maybe_code;
            my %keyboard = (
                $chars[0] => '1 ',
                $chars[1] => '2 ',
                $chars[2] => guide_ji($maybe_code),
            );
            print_keyboard \%keyboard;
        }
        @uncommitted = ();
    }

    while (@uncommitted >= 3) {
        push @entered_text, shift(@uncommitted);
    }

    my %keyboard = ();
    for my $key (@kanji_keys, map {shift_key $_} @kanji_keys) {
        my $suggested_code = join q{}, @uncommitted, $key;
        if ($codes{$suggested_code}) {
            $keyboard{$key} = guide_ji $suggested_code;
        }
    }
    if (%keyboard) {
        print_keyboard \%keyboard;
    }
}
